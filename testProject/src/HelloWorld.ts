export class HelloWorld {
    public addNumbers (a: number, b: number) {
        return a + b;
    }

    public add3Numbers (a: number, b: number, c: number) {
        return a + b + c;
    }

    public survivorLargeSum () {
        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 +
        1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -
        1 - 2 - 3 + 4 - 5 - 6 - 7 - 8 - 9 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9;
    }

    public survivorManyBrackets () {
        return ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1) +
        ((16 / 4 + ( 1 / (9 / 1 + 4 % 2)) - 16 + 3) * 100 / 1);
    }

    public takeAway (a: number, b: number) {
        return a - b;
    }

    public truth () {
        return true;
    }

    public helloStrings (h: string, w: string) {
        return h + w;
    }

    public helloStringLiteral () {
        return "hello: " + "1";
    }

    public percentage (b: number, c: number) {
        return (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 -
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100 +
        (b / c) * 100 + (b / c) * 100 + (b / c) * 100;
    }
}
